# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import List, Any, TYPE_CHECKING, overload
from azure.core.pipeline.policies import AzureKeyCredentialPolicy

from ._client import OpenAIClient as GeneratedOpenAIClient
from .operations._patch import AsyncStream
from .._patch import KeyCredential, URLRewritePolicy


if TYPE_CHECKING:
    from azure.core.credentials_async import AsyncTokenCredential


class OpenAIClient(GeneratedOpenAIClient):
    """OpenAIClient.

    :ivar completions: CompletionsOperations operations
    :vartype completions: azure.openai.operations.CompletionsOperations
    :ivar chat: ChatOperations operations
    :vartype chat: azure.openai.operations.ChatOperations
    :ivar embeddings: EmbeddingsOperations operations
    :vartype embeddings: azure.openai.operations.EmbeddingsOperations
    :ivar images: ImagesOperations operations
    :vartype images: azure.openai.operations.ImagesOperations
    :ivar audio: AudioOperations operations
    :vartype audio: azure.openai.operations.AudioOperations
    :param endpoint: Supported Cognitive Services endpoints (protocol and hostname, for example:
     https://westus.api.cognitive.microsoft.com). Required.
    :type endpoint: str
    :param credential: Credential needed for the client to connect to Azure. Is either a
     AzureKeyCredential type or a TokenCredential type. Required.
    :type credential: ~azure.openai.KeyCredential or
     ~azure.core.credentials.TokenCredential
    :keyword api_version: The API version to use for this operation. Default value is
     "2023-09-01-preview". Note that overriding this default value may result in unsupported
     behavior.
    :paramtype api_version: str
    """

    @overload
    def __init__(self, endpoint: str, credential: KeyCredential, **kwargs: Any) -> None:
        ...

    @overload
    def __init__(self, endpoint: str, credential: "AsyncTokenCredential", **kwargs: Any) -> None:
        ...

    @overload
    def __init__(self, *, openai_api_key: KeyCredential, **kwargs: Any) -> None:
        ...

    def __init__(self, *args, **kwargs: Any) -> None:
        if "openai_api_key" in kwargs:
            endpoint = "https://api.openai.com/v1"
            authentication_policy = AzureKeyCredentialPolicy(
                credential=kwargs.pop("openai_api_key"),
                name="Authorization",
                prefix="Bearer",
            )
            kwargs.update(
                {
                    "authentication_policy": kwargs.pop("authentication_policy", None) or authentication_policy,
                    "per_call_policies": kwargs.pop("per_call_policies", None) or URLRewritePolicy(endpoint),
                }
            )
        else:
            positional = list(args)
            endpoint =  positional.pop(0) if positional else kwargs.pop("endpoint", None)
            credential =  positional.pop(0) if positional else kwargs.pop("credential", None)

            if isinstance(credential, KeyCredential):
                authentication_policy = AzureKeyCredentialPolicy(
                    credential=credential,
                    name="api-key",
                )
                kwargs.update(
                    {
                        "authentication_policy": kwargs.pop("authentication_policy", None) or authentication_policy,
                    }
                )
        super().__init__(endpoint=endpoint, credential=credential, **kwargs)


__all__: List[str] = ["OpenAIClient", "AsyncStream"]

def patch_sdk():
    """Do not remove from this file.

    `patch_sdk` is a last resort escape hatch that allows you to do customizations
    you can't accomplish using the techniques described in
    https://aka.ms/azsdk/python/dpcodegen/python/customize
    """
