# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from azure.core import PipelineClient
from msrest import Serializer, Deserializer

from ._configuration import ComputerVisionClientConfiguration
from .operations import ComputerVisionClientOperations
from . import models


class ComputerVision(object):
    """The Computer Vision API provides state-of-the-art algorithms to process images and return information.
    For example, it can be used to determine if an image contains mature content, or it can be used to find all the
    faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content
    of images, and describing an image with complete English sentences.  Additionally, it can also intelligently
    generate images thumbnails for displaying large images effectively.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param endpoint: Supported Cognitive Services endpoints.
    :type endpoint: str
    """

    def __init__(
            self, credentials, endpoint, config=None, **kwargs):

        base_url = '{Endpoint}/vision/v2.1'
        self._config = config or ComputerVisionClientConfiguration(credentials, endpoint, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2.1'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.vision = ComputerVisionClientOperations(
            self._client, self._config, self._serialize, self._deserialize)


    def __enter__(self):
        self._client.__enter__()
        return self
    def __exit__(self, *exc_details):
        self._client.__exit__(*exc_details)

