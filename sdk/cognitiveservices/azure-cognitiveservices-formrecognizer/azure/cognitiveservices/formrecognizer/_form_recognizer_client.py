# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6198, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any


from azure.core import PipelineClient
from azure.core.pipeline.policies import (
    UserAgentPolicy,
    HeadersPolicy,
    RequestIdPolicy,
    ProxyPolicy,
    NetworkTraceLoggingPolicy,
    RetryPolicy,
    RedirectPolicy,
    SansIOHTTPPolicy,
ContentDecodePolicy
)
from msrest import Serializer, Deserializer
from ._configuration import FormRecognizerClientConfiguration
from .operations import FormRecognizerClientOperationsMixin
from . import models

from azure.core.pipeline.transport import RequestsTransport
from azure.core.pipeline import Pipeline

class CognitiveServicesCredentialPolicy(SansIOHTTPPolicy):
    def __init__(self, cognitiveservices_key):
        self.cognitiveservices_key = cognitiveservices_key
        super(CognitiveServicesCredentialPolicy, self).__init__()

    def on_request(self, request):
        request.http_request.headers[
            "Ocp-Apim-Subscription-Key"
        ] = self.cognitiveservices_key



class FormRecognizerClient(FormRecognizerClientOperationsMixin):
    """Extracts information from forms and images into structured data.

    :param credential: Credential needed for the client to connect to Azure.
    :type credential: azure.core.credentials.TokenCredential
    :param endpoint: Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).
    :type endpoint: str
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        endpoint,  # type: str
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        base_url = '{endpoint}/formrecognizer/v2.0-preview'
        self._config = FormRecognizerClientConfiguration(credential, endpoint, **kwargs)
        self.user_agent_policy = UserAgentPolicy(**kwargs)
        self.headers_policy = HeadersPolicy(**kwargs)
        self.proxy_policy = ProxyPolicy(**kwargs)
        self.logging_policy = NetworkTraceLoggingPolicy(**kwargs)
        self.retry_policy = RetryPolicy(**kwargs)
        self.redirect_policy = RedirectPolicy(**kwargs)

        policies = [
            self.headers_policy,
            self.user_agent_policy,
            RequestIdPolicy(**kwargs),
            self.proxy_policy,
            self.redirect_policy,
            self.retry_policy,
            CognitiveServicesCredentialPolicy(credential),
            ContentDecodePolicy(),
            self.logging_policy
        ]

        pipeline = Pipeline(RequestsTransport(**kwargs), policies=policies)
        self._client = PipelineClient(base_url=base_url, config=self._config, pipeline=pipeline, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)


    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> FormRecognizerClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
